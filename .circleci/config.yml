#version: 2.1
#orbs:
#  build-tools: circleci/build-tools@2.6.6
#jobs:
#  build:
#    working_directory: ~/code
#    docker:
#      - image: circleci/android:api-29
#    environment:
#      JVM_OPTS: -Xmx3200m
#    steps:
#      - checkout
#      - restore_cache:
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          command: chmod +x ./gradlew
#      - run:
#          name: Download Dependencies
#          command: ./gradlew androidDependencies
#      - run:
#          name: Environment var
#          command: |
#            echo 'export PATH="$PATH:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools"' >> $BASH_ENV
#            echo 'export SHELL="/bin/bash"' >> $BASH_ENV
#      - run:
#          name: Setup emulator
#          command: |
#            (sleep 2; echo "y";) | sdkmanager "system-images;android-29;default;x86" && echo "no" | avdmanager create avd -n test -k "system-images;android-29;default;x86"
#      - run:
#          name: Launch emulator
#          command: export SHELL=/bin/bash && emulator -avd test -noaudio -no-boot-anim -no-window -gpu off -verbose -qemu &
#          background: true
#          parallel: true
#      - run:
#          name: Wait for emulator
#          command: circle-android wait-for-boot
#
#      - run:
#          name: Run EspressoTests
#          command: ./gradlew :app:connectedProductsDebugAndroidTest
#      - store_artifacts:
#          path: app/build/reports
#          destination: reports
#      - store_test_results:
#          path: app/build/test-results
version: 2
reference:
  ## Constants
  gradle_cache_path: &gradle_cache_path
                       gradle_cache-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
  workspace: &workspace
               ~/src
  ## Configurations
  android_config: &android_config
    working_directory: *workspace
    macos:
      xcode: "9.4.0"
    shell: /bin/bash --login -eo pipefail
    environment:
      TERM: dumb
      JVM_OPTS: -Xmx3200m
  ## Cache
  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_cache_path
  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_cache_path
      paths:
        - ~/.gradle

  ## Dependency Downloads
  download_android_dependencies: &download_android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

jobs:
  build:
    <<: *android_config
    steps:
      - checkout
      - run:
          name: Setup environment variables
          command: |
            echo 'export PATH="$PATH:/usr/local/opt/node@8/bin:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:/usr/local/share/android-sdk/tools/bin"' >> $BASH_ENV
            echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV
            echo 'export JAVA_HOME=/Library/Java/Home' >> $BASH_ENV
      - run:
          name: Install Android sdk
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Install emulator dependencies
          command: (yes | sdkmanager "platform-tools" "platforms;android-26" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;26.0.0" "system-images;android-26;google_apis;x86" "emulator" --verbose) || true
      - *restore_gradle_cache
      - *download_android_dependencies
      - *save_gradle_cache
      - run: avdmanager create avd -n Pixel_2_API_26 -k "system-images;android-26;google_apis;x86" -g google_apis -d "Nexus 5"
      - run:
          name: Run emulator in background
          command: /usr/local/share/android-sdk/tools/emulator @Pixel_2_API_26 -skin 1080x2066 -memory 2048 -noaudio
          background: true
      - run:
          name: Run Tests
          command: ./gradlew app:connectedAndroidTest

#  build:
#    working_directory: ~/code
#    docker:
#      # Android the primary container
#      - image: circleci/android:api-29
#    environment:
#      JVM_OPTS: -Xmx3200m
#    steps:
#      - checkout
#      - restore_cache:
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          command: sudo chmod +x ./gradlew
#      - run:
#          name: Download Dependencies
#          command: ./gradlew androidDependencies
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          name: Run UnitTest
#          command: ./gradlew testProductsDebug
#      - store_artifacts:
#          path: app/build/reports
#          destination: reports
#      - store_test_results:
#          path: app/build/test-results

#  ui_test:
#    working_directory: ~/code
#    docker:
#      # Android the primary container
#      - image: circleci/android:api-29
#    environment:
#      JVM_OPTS: -Xmx3200m
#    steps:
#      - checkout
#      - restore_cache:
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          command: sudo chmod +x ./gradlew
#      - run:
#          name: Download Dependencies
#          command: ./gradlew androidDependencies
##      - run:
##          name: Setup environment variables
##          command: |
##            echo 'export PATH="$PATH:/usr/local/opt/node@8/bin:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:/usr/local/share/android-sdk/tools/bin"' >> $BASH_ENV
##            echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
##            echo 'export ANDROID_SDK_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
##            echo 'export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"' >> $BASH_ENV
##            echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV
#      - run:
#          name: Install emulator dependencies
#          command: (yes | sdkmanager "platform-tools" "platforms;android-25" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;25.0.0" "system-images;android-25;google_apis;arm64-v8a" "emulator" --verbose) || true
#      - run:
#          command: sudo chmod a+w /root
#      - run: mkdir .android && touch .android/repositories.cfg
#      - run: avdmanager create avd -n Pixel_2_API_25 -k "system-images;android-25;google_apis;arm64-v8a" -g google_apis -d "Nexus 5"
#      - run:
#          name: Run emulator in background
#          command: /usr/local/share/android-sdk/tools/emulator @Pixel_2_API_25 -skin 1080x2066 -memory 2048 -noaudio
#          background: true
#      - run:
#          name: Run Tests
#          command: ./gradlew app:connectedAndroidTest
#workflows:
#  build_and_test:
#    jobs:
#      - build
#      - ui_test